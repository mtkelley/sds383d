%Morgan Kelley
%Sampler
%Problem 2.12 SDS383D

close all; clc; clear all;
load dental.mat;
data=table2array(dental(1:108,2:3));
y=data(:,1);
X=data(:,2);

%% Calculate number of males--GenderSplit
Gender=table2array(dental(:,5));
Gendernum=countcats(Gender);
GenderSplit=Gendernum(2); %Number of males will be second--alphabetical

%% Both genders together
[beta1,omega1,param1,X1]=SamplerMK_Ex212(data,0,0);
ypred1=X1*beta1+normrnd(0,omega1);
Res1=norm(ypred1-y);
betamean1=mean(param1(:,2:4),1);

figure(1)
subplot(3,4,1)
histogram(param1(:,2))
title('\beta_1^{MF}')
subplot(3,4,2)
histogram(param1(:,3))
title('\beta_2^{MF}')
subplot(3,4,3)
histogram(param1(:,4))
title('\beta_3^{MF}')
subplot(3,4,4)
histogram(param1(:,1))
title('\omega^{MF}')

%% Just Male
[beta2,omega2,param2,X2]=SamplerMK_Ex212(data,GenderSplit,0);
ypred2=X2*beta2+normrnd(0,omega2);
Res2=norm(ypred2(1:GenderSplit)-y(1:GenderSplit));
betamean2=mean(param2(:,2:4),1);

figure(1)
subplot(3,4,5)
histogram(param2(:,2))
title('\beta_1^{M}')
subplot(3,4,6)
histogram(param2(:,3))
title('\beta_2^{M}')
subplot(3,4,7)
histogram(param2(:,4))
title('\beta_3^{M}')
subplot(3,4,8)
histogram(param2(:,1))
title('\omega^{M}')

%% Just Female 
[beta3,omega3,param3,X3]=SamplerMK_Ex212(data,GenderSplit,0);
ypred3=X1*beta3+normrnd(0,omega3);
Res3=norm(ypred3(GenderSplit+1:length(data))-y(GenderSplit+1:length(data)));
betamean3=mean(param3(:,2:4),1);

figure(1)
subplot(3,4,9)
histogram(param3(:,2))
title('\beta_1^{F}')
subplot(3,4,10)
histogram(param3(:,3))
title('\beta_2^{F}')
subplot(3,4,11)
histogram(param3(:,4))
title('\beta_3^{F}')
subplot(3,4,12)
histogram(param3(:,1))
title('\omega^{F}')

function [beta,omega,param,X] = SamplerMK_Ex212(data,GenderSplit,G,num_samples,burnin,a,b)
if nargin==3 %set parameters
    num_samples = 3000;
    burnin=100;
    a=1;
    b=1;
end


n = length(data); %rows
d=size(data,2); %cols
omega = ones(n,n); %Initialize
param=zeros(num_samples+burnin,4);

%Define gender vector
if G==1
    Gv=[ones(GenderSplit,1); zeros(n-GenderSplit,1)];
elseif G==2
    Gv=[zeros(GenderSplit,1); ones(n-GenderSplit,1)];
else 
    Gv=ones(length(data),1);
end     
%Define X and y
X=[ones(length(data),1) data(:,2) Gv];
y=data(:,1);


for i=1:(num_samples+burnin)
    Lambda=eye(n,n);
    K=eye(size(X'*Lambda*X));
    Prec=X'*Lambda*X+K;
    Sigma=Prec^-1;
    mu=Sigma*(X'*Lambda*y);
    omega=gamrnd(a+(n+d)/2,(b+(1/2)*(y'*Lambda*y-mu'*Prec*mu))^-1);
    beta=(mvnrnd(mu,((Sigma*(omega)^-1)+(Sigma*(omega)^-1).')/2))'; %Second term is averaged to get rid of rounding errors
    %Record iteration results
    param(i,:)=[omega beta'];
end
param=param(burnin:num_samples+burnin,:);
end
